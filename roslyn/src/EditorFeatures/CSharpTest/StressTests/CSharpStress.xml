<?xml version="1.0" encoding="utf-8" ?>
<TaoTest xmlns="http://microsoft.com/schemas/VSLanguages/TAO">
  <InitTest>
    <StartTarget />
    <AddProject ProjectName="TestProj" LanguageName="C#" />
    <AddItem ProjectName="TestProj" FileName="test.cs" />
    <OpenFile FileName="test.cs" />
  </InitTest>

  <ScenarioList>

    <Scenario Name="Brace Highlighting">
      <SetEditorText>class C {}</SetEditorText>
      <Wait Seconds="2"/>
      <SendKeys>{LEFT}</SendKeys>
      <SendKeys>{LEFT}</SendKeys>
      <SendKeys>{HOME}</SendKeys>
      <Wait Seconds="2"/>
    </Scenario>

    <Scenario Name="KeywordHighlighting">
      <SetEditorText>
        <![CDATA[class Program { void Main() { if (true) return; else return; } }]]>
      </SetEditorText>
      <PlaceCursor Marker="if" CharsOffset="-1"/>
      <Wait Seconds="2"/>
    </Scenario>

    <Scenario Name="Formatting">
      <SetEditorText>
        <![CDATA[using System; using System.Collections.Generic;

namespace Acme{
 public  class  Program    { // foo
public

 static void Bar() { }

 static void  Main  (  string  [  ] args )
  {
 if ( true) 
      { /* bar */
    while( false ){
     }
}
else  if( false)  {/**/}
} }
}
]]>
      </SetEditorText>
      <Wait Seconds="3"/>
      <FormatDocument />
      <Wait Seconds="3"/>
    </Scenario>

    <Scenario Name="SmartIndent">
      <SetEditorText>
        <![CDATA[class Foo
{
}]]>
      </SetEditorText>
      <PlaceCursor Marker="{" CharsOffset="1"/>
      <SendKeys>{ENTER}</SendKeys>
      <Wait Seconds="2"/>
    </Scenario>

    <Scenario Name="GoToDefinition">
      <SetEditorText>
        <![CDATA[class Class 
{ 
    void Foo() { Class c; }
}]]>
      </SetEditorText>
      <PlaceCursor Marker="c;" CharsOffset="-3"/>
      <Wait Seconds="1"/>
      <GoToDefinition />
      <OpenFile FileName="test.cs" />
      <Wait Seconds="2"/>
    </Scenario>

    <Scenario Name="Completion list at namespace level">
      <SetEditorText></SetEditorText>
      <SendKeys>usi</SendKeys>
      <Wait Seconds="2" />
      <SendKeys>{TAB}</SendKeys>
      <Wait Seconds="1" />
    </Scenario>

    <Scenario Name="Quick Info">
      <SetEditorText>
        <![CDATA[class Program
{
    static void Main(string[] args)
    {
        var c = Program.Count;
    }
    
    static int Count;
    static string Name;
}
]]>
      </SetEditorText>
      <PlaceCursor Marker="Program." CharsOffset="2"/>
      <Wait Seconds="1"/>
      <ExecuteCommand Command="Edit.QuickInfo" />
      <Wait Seconds="1"/>
      <SendKeys>{ESC}</SendKeys>
    </Scenario>

    <Scenario Name="Parameter Help">
      <SetEditorText>
        <![CDATA[class Program
{
    static void Main(string[] args)
    {
        System.Console.WriteLine(null);
    }
}
]]>
      </SetEditorText>
      <PlaceCursor Marker="null" CharsOffset="-1" />
      <Wait Seconds="1" />
      <ExecuteCommand Command="Edit.ParameterInfo" />
      <SendKeys>{DOWN}</SendKeys>
      <Wait Seconds="1" />
      <SendKeys>{ESC}</SendKeys>
    </Scenario>

    <Scenario Name="Find All References">
      <SetEditorText>
        <![CDATA[class Class
{ void Foo() { Class c; string s; } }]]>
      </SetEditorText>
      <Wait Seconds="1" />
      <OpenFile FileName="test.cs" />
      <PlaceCursor Marker="c;" CharsOffset="-3" />
      <ExecuteCommand Command="Edit.FindAllReferences" />
      <Wait Seconds="1"/>
      <OpenFile FileName="test.cs" />
      <PlaceCursor Marker="s;" CharsOffset="-3"/>
      <ExecuteCommand Command="Edit.FindAllReferences" />
      <Wait Seconds="1"/>
    </Scenario>

    <Scenario Name="Navigate To">
      <SetEditorText>
        <![CDATA[class Program { static void Main(string[] args) { } }]]>
      </SetEditorText>
      <Wait Seconds="1" />
      <NavigateTo SearchString="Main" />
    </Scenario>

    <Scenario Name="Highlight References">
      <SetEditorText>
        <![CDATA[class C
{
    void M<T>(C c) where T : C
    {
        C c = new C();
    }
}]]>
      </SetEditorText>
      <PlaceCursor Marker="C" />
      <Wait Seconds="3" />
      <SendKeys>^+{DOWN}</SendKeys>
      <Wait Seconds="3" />
    </Scenario>

    <Scenario Name="Indent/Unindent">
      <SetEditorText>
        <![CDATA[public class Program
{
    static void Main(string[] args)
    {
    }
}]]>
      </SetEditorText>
      <ExecuteCommand Command="Edit.SelectAll"/>
      <ExecuteCommand Command="Edit.IncreaseLineIndent"/>
      <Wait Seconds="2"/>
      <ExecuteCommand Command="Edit.DecreaseLineIndent"/>
      <Wait Seconds="2"/>
    </Scenario>

    <Scenario Name="Comment/Uncomment">
      <SetEditorText>
        <![CDATA[public class Program
{
    static void Main(string[] args)
    {
    }
}]]>
      </SetEditorText>
      <SendKeys>^a</SendKeys>
      <ExecuteCommand Command="Edit.CommentSelection" />
      <Wait Seconds="2"/>
      <ExecuteCommand Command="Edit.UncommentSelection" />
      <Wait Seconds="2"/>
    </Scenario>

    <Scenario Name="/// generation">
      <SetEditorText>
        <![CDATA[public class Program { }]]>
      </SetEditorText>
      <PlaceCursor Marker="public" CharsOffset="-1" />
      <SendKeys>{ENTER}{UP}///</SendKeys>
      <Wait Seconds="2"/>
    </Scenario>

    <Scenario Name="Error Squiggles">
      <SetEditorText>
        <![CDATA[public class Program : string
{
    static void Main(string[] args)
    {
        $
    }
}]]>
      </SetEditorText>
      <Wait Seconds="3"/>
    </Scenario>

    <Scenario Name="Add Using">
      <SetEditorText>
        <![CDATA[class Program : Exception]]>
      </SetEditorText>
      <Wait Seconds="2" />
      <VerifyCodeActions ApplyFix="using System;" />
      <Wait Seconds="2" />
    </Scenario>

    <Scenario Name="Fully Qualify">
      <SetEditorText>
        <![CDATA[class Program
{
    void Main()
    {
        Console.WriteLine();
    }
}]]>
      </SetEditorText>
      <Wait Seconds="2" />
      <VerifyCodeActions ApplyFix="System.Console" />
      <Wait Seconds="2" />
    </Scenario>

    <Scenario Name="ToggleBreakpoint" >
      <SetEditorText>
        <![CDATA[using System;
class Program
{
    void Foo()
    {
        Console.WriteLine();
    }
}]]>
      </SetEditorText>
      <PlaceCursor Marker="Console" CharsOffset="-1"/>
      <ExecuteCommand Command="Debug.ToggleBreakpoint"/>
      <Wait Seconds="1"/>
      <ExecuteCommand Command="Debug.ToggleBreakpoint"/>
    </Scenario>

  </ScenarioList>

  <CleanupScenario>
    <ForceGC />
    <LogStressData />
  </CleanupScenario>

  <CleanupTest>
    <ForceGC />
    <CloseTarget />
  </CleanupTest>
</TaoTest>
