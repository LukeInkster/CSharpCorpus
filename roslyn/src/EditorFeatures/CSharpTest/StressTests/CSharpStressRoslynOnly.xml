<?xml version="1.0" encoding="utf-8" ?>
<TaoTest xmlns="http://microsoft.com/schemas/VSLanguages/TAO">
  <InitTest>
    <StartTarget />
    <AddProject ProjectName="TestProj" LanguageName="C#" />
    <AddItem ProjectName="TestProj" FileName="test.cs" />
  </InitTest>

  <ScenarioList>

    <Scenario Name="Generate Type">
      <SetEditorText>
        <![CDATA[class B : A { }]]>
      </SetEditorText>
      <PlaceCursor Marker="A" CharsOffset="-1"/>
      <Wait Seconds="1"/>
      <VerifyCodeActions ApplyFix="Generate class for 'A' in 'Global Namespace'" />
      <Wait Seconds="1"/>
    </Scenario>

    <Scenario Name="Generate Type In New File">
      <SetEditorText>
        <![CDATA[class B : A { }]]>
      </SetEditorText>
      <PlaceCursor Marker="A" CharsOffset="-1"/>
      <Wait Seconds="1"/>
      <VerifyCodeActions ApplyFix="Generate class for 'A' in 'Global Namespace' (in new file)" />
      <Wait Seconds="1"/>
      <DeleteFile FileName="A.cs" ProjectName="TestProj" />
      <Wait Seconds="1" />
    </Scenario>
    
    <Scenario Name="Generate Constructor">
      <SetEditorText>
        <![CDATA[class Class
{
    void Main()
    {
        Class c = new Class("constructor");
    }
}]]>
      </SetEditorText>
      <PlaceCursor Marker="constructor&quot;);" CharsOffset="1"/>
      <Wait Seconds="1" />
      <VerifyCodeActions ApplyFix="Generate new constructor in 'Class'" />
      <Wait Seconds="1" />
    </Scenario>
    
    <Scenario Name="Generate Method Stub">
      <SetEditorText>
        <![CDATA[class C
{
    static void Main()
    {
        Foo();
    }
}]]>
      </SetEditorText>
      <PlaceCursor Marker="Foo" CharsOffset="-1" />
      <Wait Seconds="1" />
      <VerifyCodeActions ApplyFix="Generate method 'Foo' in 'C'" />
      <Wait Seconds="1" />
    </Scenario>

    <Scenario Name="Generate Property">
      <SetEditorText>
        <![CDATA[class Class
{
    void Main()
    {
        Property = 2;
    }
}]]>
      </SetEditorText>
      <PlaceCursor Marker="Property" />
      <Wait Seconds="1" />
      <VerifyCodeActions ApplyFix="Generate property 'Property' in 'Class'" />
      <Wait Seconds="1" />
    </Scenario>

    <Scenario Name="Generate Field">
      <SetEditorText>
        <![CDATA[class Class
{
    void Main()
    {
        field = 2;
    }
}]]>
      </SetEditorText>
      <PlaceCursor Marker="field" />
      <Wait Seconds="1" />
      <VerifyCodeActions ApplyFix="Generate field 'field' in 'Class'" />
      <Wait Seconds="1" />
    </Scenario>

    <Scenario Name="Generate Enum Member">
      <SetEditorText>
        <![CDATA[class Class
{
    void Main()
    {
        Enum e = Enum.Field;
    }
} enum Enum { }
]]>
      </SetEditorText>
      <PlaceCursor Marker="Field" CharsOffset="-1" />
      <Wait Seconds="1" />
      <VerifyCodeActions ApplyFix="Generate enum member 'Field' in 'Enum'" />
      <Wait Seconds="1" />
    </Scenario>

    <Scenario Name="Implement interface">
      <SetEditorText>
        <![CDATA[using System;
class Program : IDisposable { }]]>
      </SetEditorText>
      <PlaceCursor Marker="IDisposable" CharsOffset="-1"/>
      <Wait Seconds="2"/>
      <VerifyCodeActions ApplyFix="Implement interface" />
      <Wait Seconds="2"/>
    </Scenario>

    <Scenario Name="Rename">
      <SetEditorText>
        <![CDATA[class Program { }]]>
      </SetEditorText>
      <PlaceCursor Marker="Program" CharsOffset="-1"/>
      <SendKeys>{F2}</SendKeys>
      <Wait Seconds="1"/>
      <SendKeys>abc</SendKeys>
      <Wait Seconds="2"/>
      <SendKeys>{ESC}</SendKeys>
      <Wait Seconds="1"/>
    </Scenario>

    <Scenario Name="Extract Method">
      <SetEditorText>
        <![CDATA[using System;
class Program
{
    void Foo()
    {
        Console.WriteLine();
        Foo();
    }
}]]>
      </SetEditorText>
      <PlaceCursor Marker="Console" CharsOffset="-1"/>
      <SendKeys>+{END}</SendKeys>
      <Wait Seconds="2"/>
      <ExecuteCommand Command="Refactor.ExtractMethod"/>
      <Wait Seconds="2"/>
      <SendKeys>{ESC}</SendKeys>
      <Wait Seconds="1"/>
    </Scenario>

    <Scenario Name="Introduce local">
      <SetEditorText>
        <![CDATA[class Program
{
    void Main()
    {
        int a = 6 * 7;
    }
}]]>
      </SetEditorText>
      <SelectText>7</SelectText>
      <VerifyCodeActions ApplyFix="Introduce local for '7'" />
      <WaitForWorkspace />
      <Wait Seconds="1" />
      <SendKeys>{DELETE}seven{ESC}</SendKeys>
      <WaitForRenameCompletion />
      <Wait Seconds="1" />
    </Scenario>

    <Scenario Name="Inline Temporary">
      <SetEditorText>
        <![CDATA[class Program
{
    void Main()
    {
        int seven = 7;
        int b = 6 * seven;
    }
}]]>
      </SetEditorText>
      <SelectText>seven</SelectText>
      <Wait Seconds="1" />
      <VerifyCodeActions ApplyFix="Inline temporary variable" />
      <Wait Seconds="1" />
    </Scenario>

    <Scenario Name="Invert If">
      <SetEditorText>
        <![CDATA[class Program
{
    int Main()
    {
        if (true)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}]]>
      </SetEditorText>
      <PlaceCursor Marker="if" CharsOffset="-1" />
      <Wait Seconds="1" />
      <VerifyCodeActions ApplyFix="Invert if statement" />
      <Wait Seconds="1" />
    </Scenario>

    <Scenario Name="Simplify Name">
      <SetEditorText>
        <![CDATA[using System;

class Program
{
    int Main()
    {
        System.Console.WriteLine();
    }
}]]>
      </SetEditorText>
      <PlaceCursor Marker="Console" CharsOffset="-1" />
      <Wait Seconds="1" />
      <VerifyCodeActions ApplyFix="Simplify name" />
      <Wait Seconds="1" />
    </Scenario>

  </ScenarioList>

  <CleanupScenario>
    <ForceGC />
    <LogStressData />
  </CleanupScenario>

  <CleanupTest>
    <ForceGC />
    <CloseTarget />
  </CleanupTest>
</TaoTest>
