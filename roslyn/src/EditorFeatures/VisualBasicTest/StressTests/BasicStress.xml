<?xml version="1.0" encoding="utf-8" ?>
<TaoTest xmlns="http://microsoft.com/schemas/VSLanguages/TAO">
  <InitTest>
    <StartTarget />
    <AddProject ProjectName="TestProj" Language="VisualBasic" />
    <AddItem ProjectName="TestProj" FileName="test.vb" />
    <OpenFile FileName="test.vb" />
  </InitTest>

  <ScenarioList>

    <Scenario Name="Brace Highlighting">
      <SetEditorText>
        <![CDATA[Class C
    Sub Main()
    End Sub
End Class]]>
      </SetEditorText>
      <Wait Seconds="2"/>
      <PlaceCursor Marker="(" CharsOffset="-1"/>
      <SendKeys>{RIGHT}</SendKeys>
      <SendKeys>{RIGHT}</SendKeys>
      <SendKeys>{HOME}</SendKeys>
      <Wait Seconds="2"/>
    </Scenario>

    <Scenario Name="KeywordHighlighting">
      <SetEditorText>
        <![CDATA[Class C
    Sub Main()
        If True Then
            Return
        Else
            Return
        End If
    End Sub
End Class]]>
      </SetEditorText>
      <PlaceCursor Marker="If" CharsOffset="-1"/>
      <Wait Seconds="2"/>
    </Scenario>

    <Scenario Name="Formatting">
      <SetEditorText>
        <![CDATA[Imports System
Imports System.Collections.Generic
Namespace Acme
 Public  Class  Program         '  foo
Public _
 Shared Sub Bar()
          End Sub

 Shared Sub  Main (  args(  ) As String)
 If True Then
                'bar
          While False
             End While
ElseIf    False     Then
  End If
End Sub
      End Class
          End Namespace
        ]]>
      </SetEditorText>
      <FormatDocument/>
      <Wait Seconds="3"/>
    </Scenario>

    <Scenario Name="SmartIndent">
      <SetEditorText>
        <![CDATA[Class Foo
End Class]]>
      </SetEditorText>
      <PlaceCursor Marker="Foo" CharsOffset="1"/>
      <SendKeys>{ENTER}</SendKeys>
      <Wait Seconds="2"/>
    </Scenario>

    <Scenario Name="GoToDefinition">
      <SetEditorText>
        <![CDATA[Class Foo
    Sub Test()
        Dim c As Foo'#1
    End Sub
End Class]]>
      </SetEditorText>
      <PlaceCursor Marker="'#1" CharsOffset="-2"/>
      <Wait Seconds="1"/>
      <GoToDefinition/>
      <OpenFile FileName="test.vb" />
      <Wait Seconds="2"/>
    </Scenario>

    <Scenario Name="Completion list at namespace level">
      <SetEditorText></SetEditorText>
      <SendKeys>imp</SendKeys>
      <Wait Seconds="2"/>
      <SendKeys>{TAB}</SendKeys>
      <Wait Seconds="1" />
    </Scenario>

    <Scenario Name="Quick Info">
      <SetEditorText>
        <![CDATA[Class Program
    Shared Sub M()
        Dim c = Program.Count
    End Sub

    Shared Count As Integer
    Shared Name As String
End Class]]>
      </SetEditorText>
      <PlaceCursor Marker="Program." CharsOffset="2"/>
      <Wait Seconds="1"/>
      <ExecuteCommand Command="Edit.QuickInfo" />
      <Wait Seconds="1"/>
      <SendKeys>{ESC}</SendKeys>
    </Scenario>

    <Scenario Name="Parameter Help">
      <SetEditorText>
        <![CDATA[Module Program
    Sub Main(args() As String)
        Console.WriteLine(String.Empty)
    End Sub
End Module]]>
      </SetEditorText>
      <PlaceCursor Marker="Empty" CharsOffset="-1" />
      <Wait Seconds="1" />
      <ExecuteCommand Command="Edit.ParameterInfo" />
      <Wait Seconds="1" />
      <SendKeys>{DOWN}</SendKeys>
      <Wait Seconds="1" />
      <SendKeys>{ESC}</SendKeys>
    </Scenario>

    <Scenario Name="Find All References">
      <SetEditorText>
        <![CDATA[Class Program
    Sub Foo()
        Dim p As Program '#1
        Dim s As String '#2
    End Sub
End Class]]>
      </SetEditorText>
      <Wait Seconds="1"/>
      <OpenFile FileName="test.vb" />
      <PlaceCursor Marker="'#1" CharsOffset="-3" />
      <ExecuteCommand Command="Edit.FindAllReferences" />
      <Wait Seconds="1"/>
      <OpenFile FileName="test.vb" />
      <PlaceCursor Marker="'#2" CharsOffset="-3"/>
      <ExecuteCommand Command="Edit.FindAllReferences" />
      <Wait Seconds="1"/>
    </Scenario>

    <Scenario Name="Navigate To">
      <SetEditorText>
        <![CDATA[Module Program
    Sub Main(args() As String)
    End Sub
End Module]]>
      </SetEditorText>
      <Wait Seconds="1" />
      <NavigateTo SearchString="Main" />
    </Scenario>

    <Scenario Name="Highlight References">
      <SetEditorText>
        <![CDATA[Class C'#1
    Sub M(Of T As C)(x As C)
        Dim y As C = New C()
    End Sub
End Class]]>
      </SetEditorText>
      <PlaceCursor Marker="'#1" CharsOffset="-2"/>
      <Wait Seconds="3" />
      <SendKeys>^+{DOWN}</SendKeys>
      <Wait Seconds="3" />
    </Scenario>

    <Scenario Name="Indent/Unindent">
      <SetEditorText>
        <![CDATA[Module Program
    Sub Main(args() As String)

    End Sub
End Module]]>
      </SetEditorText>
      <SendKeys>^a</SendKeys>
      <SendKeys>{TAB}</SendKeys>
      <Wait Seconds="2"/>
      <SendKeys>+{TAB}</SendKeys>
      <Wait Seconds="2"/>
    </Scenario>

    <Scenario Name="Comment/Uncomment">
      <SetEditorText>
        <![CDATA[Module Program
    Sub Main(args() As String)

    End Sub
End Module]]>
      </SetEditorText>
      <SendKeys>^a</SendKeys>
      <ExecuteCommand Command="Edit.CommentSelection" />
      <Wait Seconds="2"/>
      <ExecuteCommand Command="Edit.UncommentSelection" />
      <Wait Seconds="2"/>
    </Scenario>

    <Scenario Name="''' generation">
      <SetEditorText>
        <![CDATA[Public Class Program
End Class]]>
      </SetEditorText>
      <PlaceCursor Marker="Public" CharsOffset="-1" />
      <SendKeys>{ENTER}{UP}'''</SendKeys>
      <Wait Seconds="2"/>
    </Scenario>

    <Scenario Name="Error Squiggles">
      <SetEditorText>
        <![CDATA[Public Class Program
    Inherits String
    Sub Main(args() As String)
        $
    End Sub
End Class]]>
      </SetEditorText>
      <Wait Seconds="3"/>
    </Scenario>

    <!--no Add Using on VB-->

    <!--no Fully Qualify on VB-->

    <Scenario Name="ToggleBreakpoint" >
      <SetEditorText>
        <![CDATA[Public Class Program
    Sub Main(args() As String)
        Console.WriteLine()
    End Sub
End Class]]>
      </SetEditorText>
      <PlaceCursor Marker="Console" CharsOffset="-1"/>
      <ExecuteCommand Command="Debug.ToggleBreakpoint"/>
      <Wait Seconds="1"/>
      <ExecuteCommand Command="Debug.ToggleBreakpoint"/>
    </Scenario>

    <!--End Construct - VB Only-->
    <Scenario Name="End Construct Generation">
      <SetEditorText>
        <![CDATA[Public Class Program
    Sub Main()
        If True Then
    End Sub
End Class]]>
      </SetEditorText>
      <PlaceCursor Marker="Then" CharsOffset="1"/>
      <SendKeys>{ENTER}</SendKeys>
      <Wait Seconds="1"/>
    </Scenario>

    <Scenario Name="End Construct Fixup">
      <SetEditorText>
        <![CDATA[Class C
End Class]]>
      </SetEditorText>
      <WaitForWorkspace />
      <PlaceCursor Marker="Class"/>
      <SendKeys>Interface</SendKeys>
      <Wait Seconds="1"/>
    </Scenario>
  </ScenarioList>

  <CleanupScenario>
    <ForceGC />
    <LogStressData />
  </CleanupScenario>

  <CleanupTest>
    <ForceGC />
    <CloseTarget />
  </CleanupTest>
</TaoTest>
