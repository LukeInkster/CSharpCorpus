<?xml version="1.0" encoding="utf-8" ?>
<TaoTest xmlns="http://microsoft.com/schemas/VSLanguages/TAO">
  <InitTest>
    <StartTarget />
    <AddProject ProjectName="TestProj" LanguageName="Visual Basic" />
    <AddItem ProjectName="TestProj" FileName="test.vb" />
  </InitTest>

  <ScenarioList>

    <Scenario Name="Generate Type">
      <SetEditorText>
        <![CDATA[Class B
    Inherits A
End Class]]>
      </SetEditorText>
      <PlaceCursor Marker="A" CharsOffset="-1"/>
      <Wait Seconds="1"/>
      <VerifyCodeActions ApplyFix="Generate class for 'A' in 'Global Namespace'" />
      <Wait Seconds="1"/>
    </Scenario>

    <Scenario Name="Generate Type In New File">
      <SetEditorText>
        <![CDATA[Class B
    Inherits A
End Class]]>
      </SetEditorText>
      <PlaceCursor Marker="A" CharsOffset="-1"/>
      <Wait Seconds="1"/>
      <VerifyCodeActions ApplyFix="Generate class for 'A' in 'Global Namespace' (in new file)" />
      <Wait Seconds="1"/>
      <DeleteFile FileName="A.vb" ProjectName="TestProj"/>
    </Scenario>

    <!--Bug5714-->
    <!--<Scenario Name="Generate Constructor">
      <SetEditorText>
        <![CDATA[Class Test
    Sub M()
        Dim t As Test = New Test("Constructor")
    End Sub
End Class]]>
      </SetEditorText>
      <PlaceCursor Marker="constructor&quot;)" CharsOffset="1"/>
      <Wait Seconds="1" />
      <VerifyCodeActions ApplyFix="Generate new constructor in 'Test'" />
      <Wait Seconds="1" />
    </Scenario>-->

    <Scenario Name="Generate Method Stub">
      <SetEditorText>
        <![CDATA[Class C
    Sub M()
        Foo()
    End Sub
End Class]]>
      </SetEditorText>
      <PlaceCursor Marker="Foo" CharsOffset="-1" />
      <Wait Seconds="1" />
      <VerifyCodeActions ApplyFix="Generate method 'Foo' in 'TestProj.C'" />
      <Wait Seconds="1" />
    </Scenario>

    <Scenario Name="Generate Property">
      <SetEditorText>
        <![CDATA[Class C
    Sub M()
        Prop = 2
    End Sub
End Class]]>
      </SetEditorText>
      <PlaceCursor Marker="Prop" />
      <Wait Seconds="1" />
      <VerifyCodeActions ApplyFix="Generate property 'Prop' in 'TestProj.C'" />
      <Wait Seconds="1" />
    </Scenario>

    <Scenario Name="Generate Field">
      <SetEditorText>
        <![CDATA[Class C
    Sub M()
        field = 2
    End Sub
End Class]]>
      </SetEditorText>
      <PlaceCursor Marker="field" />
      <Wait Seconds="1" />
      <VerifyCodeActions ApplyFix="Generate field 'field' in 'TestProj.C'" />
      <Wait Seconds="1" />
    </Scenario>

    <!--Enum not implement on VB-->
    <!--<Scenario Name="Generate Enum Member">
      <SetEditorText>
        <![CDATA[Class C
    Sub M()
        Dim x As E = E.Field
    End Sub
End Class

Enum E

End Enum]]>
      </SetEditorText>
      <PlaceCursor Marker="Field" CharsOffset="-1" />
      <Wait Seconds="1" />
      <VerifyCodeActions ApplyFix="Generate enum member 'Field' in 'E'" />
      <Wait Seconds="1" />
    </Scenario>-->

    <Scenario Name="Implement interface">
      <SetEditorText>
        <![CDATA[Class C
    Implements IDisposable
End Class]]>
      </SetEditorText>
      <PlaceCursor Marker="IDisposable" CharsOffset="-1"/>
      <Wait Seconds="2"/>
      <VerifyCodeActions ApplyFix="Implement interface" />
      <Wait Seconds="2"/>
    </Scenario>

    <Scenario Name="Rename">
      <SetEditorText>
        <![CDATA[Class Program
    Sub M()
        Dim p As Program = New Program()
    End Sub
End Class]]>
      </SetEditorText>
      <PlaceCursor Marker="Program"/>
      <SendKeys>{F2}</SendKeys>
      <Wait Seconds="1"/>
      <SendKeys>abc</SendKeys>
      <Wait Seconds="2"/>
      <SendKeys>{ESC}</SendKeys>
      <Wait Seconds="1"/>
    </Scenario>

    <Scenario Name="Extract Method">
      <SetEditorText>
        <![CDATA[Class Program
    Sub Foo()
        Console.WriteLine()
        Foo()
    End Sub
End Class]]>
      </SetEditorText>
      <PlaceCursor Marker="Console" CharsOffset="-1"/>
      <SendKeys>+{END}</SendKeys>
      <Wait Seconds="2"/>
      <SendKeys>^r</SendKeys>
      <SendKeys>m</SendKeys>
      <Wait Seconds="2"/>
      <SendKeys>{ESC}</SendKeys>
      <Wait Seconds="1"/>
    </Scenario>

    <!--No Introduce local on VB-->

    <Scenario Name="Inline Temporary">
      <SetEditorText>
        <![CDATA[Class Program
    Sub Main()
        Dim seven = 7
        Dim answer = 6 * seven
    End Sub
End Class]]>
      </SetEditorText>
      <SelectText>seven</SelectText>
      <Wait Seconds="1" />
      <VerifyCodeActions ApplyFix="Inline temporary variable" />
      <Wait Seconds="1" />
    </Scenario>

    <!--No Invert If on VB-->

    <!--No Simplify Type Name on VB-->

  </ScenarioList>

  <CleanupScenario>
    <ForceGC />
    <LogStressData />
  </CleanupScenario>

  <CleanupTest>
    <ForceGC />
    <CloseTarget />
  </CleanupTest>
</TaoTest>
