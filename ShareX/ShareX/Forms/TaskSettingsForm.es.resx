<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>Descripción:</value>
  </data>
  <data name="tpTask.Text" xml:space="preserve">
    <value>Tarea</value>
  </data>
  <data name="tpGeneral.Text" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="tpImage.Text" xml:space="preserve">
    <value>Imagen</value>
  </data>
  <data name="cbShowCursor.Text" xml:space="preserve">
    <value>Mostrar cursor en las capturas de pantalla</value>
  </data>
  <data name="lblCaptureShadowOffset.Text" xml:space="preserve">
    <value>Desplazamiento de la sombra:</value>
  </data>
  <data name="cbCaptureTransparent.Text" xml:space="preserve">
    <value>Ventana de captura con transparencia</value>
  </data>
  <data name="cbCaptureAutoHideTaskbar.Text" xml:space="preserve">
    <value>Cuando se hace captura de la ventana si la ventana se cruza con la barra de tareas; ocultar la barra de tareas</value>
  </data>
  <data name="cbCaptureShadow.Text" xml:space="preserve">
    <value>Ventana de captura con la sombra (requiere transparencia)</value>
  </data>
  <data name="lblScreenshotDelayInfo.Text" xml:space="preserve">
    <value>segundos</value>
  </data>
  <data name="cbCaptureClientArea.Text" xml:space="preserve">
    <value>Capturar área de cliente al hacer ventana o captura de la ventana activa</value>
  </data>
  <data name="cbScreenshotDelay.Text" xml:space="preserve">
    <value>Retraso de la captura de pantalla:</value>
  </data>
  <data name="chkUseDefaultCaptureSettings.Text" xml:space="preserve">
    <value>Utilizar la configuración de captura en configuración de la tarea de la ventana principal</value>
  </data>
  <data name="tpRegionCapture.Text" xml:space="preserve">
    <value>Captura región</value>
  </data>
  <data name="tpScreenRecorder.Text" xml:space="preserve">
    <value>Grabador de pantalla</value>
  </data>
  <data name="tpCapture.Text" xml:space="preserve">
    <value>Captura</value>
  </data>
  <data name="tpUpload.Text" xml:space="preserve">
    <value>Subir</value>
  </data>
  <data name="tpActions.Text" xml:space="preserve">
    <value>Acciones</value>
  </data>
  <data name="tpWatchFolders.Text" xml:space="preserve">
    <value>Carpetas supervisadas</value>
  </data>
  <data name="tpAdvanced.Text" xml:space="preserve">
    <value>Avanzado</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>ShareX - Configuración de la tarea</value>
  </data>
  <data name="chkUseDefaultAdvancedSettings.Text" xml:space="preserve">
    <value>Utilizar la configuración avanzada en configuración de la tarea de la ventana principal</value>
  </data>
  <data name="btnWatchFolderAdd.Text" xml:space="preserve">
    <value>Añadir...</value>
  </data>
  <data name="btnWatchFolderRemove.Text" xml:space="preserve">
    <value>Quitar</value>
  </data>
  <data name="chWatchFolderIncludeSubdirectories.Text" xml:space="preserve">
    <value>Incluir subdirectorios</value>
  </data>
  <data name="chWatchFolderFilter.Text" xml:space="preserve">
    <value>Filtrar</value>
  </data>
  <data name="chWatchFolderFolderPath.Text" xml:space="preserve">
    <value>Ruta de la carpeta</value>
  </data>
  <data name="cbWatchFolderEnabled.Text" xml:space="preserve">
    <value>Ver carpetas y si el nuevo archivo creado luego subirlo</value>
  </data>
  <data name="chkUseDefaultActions.Text" xml:space="preserve">
    <value>Utilice acciones en configuración de la tarea de la ventana principal</value>
  </data>
  <data name="btnActionsRemove.Text" xml:space="preserve">
    <value>Quitar</value>
  </data>
  <data name="btnActionsEdit.Text" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="chActionsExtensions.Text" xml:space="preserve">
    <value>Extensiones</value>
  </data>
  <data name="chActionsArgs.Text" xml:space="preserve">
    <value>Argumentos</value>
  </data>
  <data name="chActionsPath.Text" xml:space="preserve">
    <value>Ruta</value>
  </data>
  <data name="chActionsName.Text" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="btnActionsAdd.Text" xml:space="preserve">
    <value>Añadir</value>
  </data>
  <data name="btnActionsDuplicate.Text" xml:space="preserve">
    <value>Duplicar</value>
  </data>
  <data name="cbClipboardUploadShortenURL.Text" xml:space="preserve">
    <value>Si el portapapeles contiene una URL luego usar URL acortador</value>
  </data>
  <data name="cbClipboardUploadAutoIndexFolder.Text" xml:space="preserve">
    <value>Si el portapapeles contiene una ruta de carpeta entonces índice que carpeta y subir el índice</value>
  </data>
  <data name="chkClipboardUploadURLContents.Text" xml:space="preserve">
    <value>Si el portapapeles contiene una dirección de fichero; descargarlo y cargarlo</value>
  </data>
  <data name="cbClipboardUploadShareURL.Text" xml:space="preserve">
    <value>Si el portapapeles contiene una URL luego compartirlo usando servicio para compartir URL</value>
  </data>
  <data name="tpUploadClipboard.Text" xml:space="preserve">
    <value>Subir portapapeles</value>
  </data>
  <data name="lblNameFormatPattern.Text" xml:space="preserve">
    <value>Modelo de nombre para la captura o al portapapeles subir:</value>
  </data>
  <data name="cbFileUploadUseNamePattern.Text" xml:space="preserve">
    <value>Utilice modelo de nombre para la subida de archivos en vez de nombre de archivo actual</value>
  </data>
  <data name="btnResetAutoIncrementNumber.Text" xml:space="preserve">
    <value>Restablecer número de incremento automático</value>
  </data>
  <data name="lblNameFormatPatternPreviewActiveWindow.Text" xml:space="preserve">
    <value>Vista previa</value>
  </data>
  <data name="lblNameFormatPatternActiveWindow.Text" xml:space="preserve">
    <value>Modelo de nombre para la captura de la ventana activa:</value>
  </data>
  <data name="lblNameFormatPatternPreview.Text" xml:space="preserve">
    <value>Vista previa</value>
  </data>
  <data name="cbNameFormatCustomTimeZone.Text" xml:space="preserve">
    <value>Usar zona horaria personalizada:</value>
  </data>
  <data name="chkUseDefaultUploadSettings.Text" xml:space="preserve">
    <value>Utilice la configuración de subida en configuración de la tarea de la ventana principal</value>
  </data>
  <data name="lblGIFFPS.Text" xml:space="preserve">
    <value>GIF FPS:</value>
  </data>
  <data name="cbScreenRecorderFixedDuration.Text" xml:space="preserve">
    <value>Duración fija:</value>
  </data>
  <data name="btnEncoderConfig.Text" xml:space="preserve">
    <value>Perfiles...</value>
  </data>
  <data name="chkRunScreencastCLI.Text" xml:space="preserve">
    <value>Ejecutar CLI después:</value>
  </data>
  <data name="lblScreenRecordFPS.Text" xml:space="preserve">
    <value>FFmpeg FPS:</value>
  </data>
  <data name="lblScreenRecorderFixedDuration.Text" xml:space="preserve">
    <value>segundos</value>
  </data>
  <data name="chkScreenRecordAutoStart.Text" xml:space="preserve">
    <value>Iniciar la grabación después:</value>
  </data>
  <data name="lblScreenRecorderStartDelay.Text" xml:space="preserve">
    <value>segundos</value>
  </data>
  <data name="btnScreenRecorderFFmpegOptions.Text" xml:space="preserve">
    <value>Opciones de FFmpeg...</value>
  </data>
  <data name="lblThumbnailWidth.Text" xml:space="preserve">
    <value>Anchura:</value>
  </data>
  <data name="lblThumbnailHeight.Text" xml:space="preserve">
    <value>Altura:</value>
  </data>
  <data name="lblThumbnailName.Text" xml:space="preserve">
    <value>Nombre de la miniatura:</value>
  </data>
  <data name="lblThumbnailNamePreview.Text" xml:space="preserve">
    <value>Vista previa</value>
  </data>
  <data name="cbThumbnailIfSmaller.Text" xml:space="preserve">
    <value>Crear miniatura sólo si tamaño de la imagen es más grande que el tamaño miniatura</value>
  </data>
  <data name="tpThumbnail.Text" xml:space="preserve">
    <value>Miniatura</value>
  </data>
  <data name="btnImageEffects.Text" xml:space="preserve">
    <value>Configuración de efectos de imagen...</value>
  </data>
  <data name="cbImageEffectOnlyRegionCapture.Text" xml:space="preserve">
    <value>Sólo aplicar efectos a región de captura</value>
  </data>
  <data name="chkShowImageEffectsWindowAfterCapture.Text" xml:space="preserve">
    <value>Mostrar ventana de efectos de imagen después la captura</value>
  </data>
  <data name="lblImageEffectsNote.Text" xml:space="preserve">
    <value>Puede activar / desactivar los efectos de la imagen desde "Después de las tareas de captura -&gt; 
Agregar efectos de imagen".</value>
  </data>
  <data name="tpEffects.Text" xml:space="preserve">
    <value>Efectos</value>
  </data>
  <data name="chkUseDefaultImageSettings.Text" xml:space="preserve">
    <value>Utilice configuración de la imagen en configuración de la tarea de la ventana principal</value>
  </data>
  <data name="lblImageJPEGQuality.Text" xml:space="preserve">
    <value>Calidad de JPEG:</value>
  </data>
  <data name="lblImageGIFQuality.Text" xml:space="preserve">
    <value>Calidad de GIF:</value>
  </data>
  <data name="lblImageFileExist.Text" xml:space="preserve">
    <value>Si existe el archivo:</value>
  </data>
  <data name="lblImageFormat.Text" xml:space="preserve">
    <value>Formato de imagen:</value>
  </data>
  <data name="chkUseDefaultGeneralSettings.Text" xml:space="preserve">
    <value>Utilice la configuración general en configuración de la tarea de la ventana principal</value>
  </data>
  <data name="cbPlaySoundAfterCapture.Text" xml:space="preserve">
    <value>Reproducir sonido después de que se hizo la captura</value>
  </data>
  <data name="cbPlaySoundAfterUpload.Text" xml:space="preserve">
    <value>Reproducir sonido después de que se complete la tarea</value>
  </data>
  <data name="lblAfterTaskNotification.Text" xml:space="preserve">
    <value>Después de que se completó la tarea:</value>
  </data>
  <data name="btnTask.Text" xml:space="preserve">
    <value>Tarea...</value>
  </data>
  <data name="tsmiURLSharingServices.Text" xml:space="preserve">
    <value>Servicios para compartir URL</value>
  </data>
  <data name="tsmiURLShorteners.Text" xml:space="preserve">
    <value>Acortadores de URL</value>
  </data>
  <data name="tsmiFileUploaders.Text" xml:space="preserve">
    <value>Cargadores de archivos</value>
  </data>
  <data name="tsmiTextUploaders.Text" xml:space="preserve">
    <value>Cargadores de texto</value>
  </data>
  <data name="tsmiImageUploaders.Text" xml:space="preserve">
    <value>Cargadores de imágenes</value>
  </data>
  <data name="btnDestinations.Text" xml:space="preserve">
    <value>Destinaciones...</value>
  </data>
  <data name="btnAfterUpload.Text" xml:space="preserve">
    <value>Después de subir...</value>
  </data>
  <data name="btnAfterCapture.Text" xml:space="preserve">
    <value>Después de la captura...</value>
  </data>
  <data name="chkOverrideFTP.Text" xml:space="preserve">
    <value>Sobrescribir la configuración predeterminada del cuenta FTP</value>
  </data>
  <data name="chkOverrideCustomUploader.Text" xml:space="preserve">
    <value>Sobrescribir la configuración predeterminada del uploader personalizado</value>
  </data>
  <data name="cbUseDefaultAfterCaptureSettings.Text" xml:space="preserve">
    <value>Utilizar la configuración predeterminada "Después de capturar"</value>
  </data>
  <data name="cbUseDefaultAfterUploadSettings.Text" xml:space="preserve">
    <value>Utilizar la configuración predeterminada "Después de la carga"</value>
  </data>
  <data name="cbUseDefaultDestinationSettings.Text" xml:space="preserve">
    <value>Utilizar la configuración predeterminada "Destinación"</value>
  </data>
</root>