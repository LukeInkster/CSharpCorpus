<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>Description :</value>
  </data>
  <data name="tpTask.Text" xml:space="preserve">
    <value>Tâche</value>
  </data>
  <data name="tpGeneral.Text" xml:space="preserve">
    <value>Général</value>
  </data>
  <data name="tpImage.Text" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="lblCaptureCustomRegionWidth.Text" xml:space="preserve">
    <value>Largeur</value>
  </data>
  <data name="lblCaptureCustomRegionHeight.Text" xml:space="preserve">
    <value>Hauteur</value>
  </data>
  <data name="cbShowCursor.Text" xml:space="preserve">
    <value>Afficher le curseur dans les captures d'écran</value>
  </data>
  <data name="lblCaptureShadowOffset.Text" xml:space="preserve">
    <value>Décalage de l'ombre :</value>
  </data>
  <data name="cbCaptureTransparent.Text" xml:space="preserve">
    <value>Capturer la fenêtre avec la transparence</value>
  </data>
  <data name="cbCaptureAutoHideTaskbar.Text" xml:space="preserve">
    <value>Lors de la capture d'une fenêtre, cacher la barre des tâches si la fenêtre croise celle-ci</value>
  </data>
  <data name="cbCaptureShadow.Text" xml:space="preserve">
    <value>Capturer la fenêtre avec ombrage (transparence nécessaire)</value>
  </data>
  <data name="lblScreenshotDelayInfo.Text" xml:space="preserve">
    <value>secondes</value>
  </data>
  <data name="cbCaptureClientArea.Text" xml:space="preserve">
    <value>Capturer la zone client pendant la capture d'une fenêtre ou d'une fenêtre active</value>
  </data>
  <data name="cbScreenshotDelay.Text" xml:space="preserve">
    <value>Délai de la capture d'écran :</value>
  </data>
  <data name="chkUseDefaultCaptureSettings.Text" xml:space="preserve">
    <value>Utiliser les paramètres de capture dans la fenêtre principale des paramètres des tâches</value>
  </data>
  <data name="tpRegionCapture.Text" xml:space="preserve">
    <value>Capture d'une région </value>
  </data>
  <data name="tpScreenRecorder.Text" xml:space="preserve">
    <value>Enregistreur d'écran</value>
  </data>
  <data name="tpCapture.Text" xml:space="preserve">
    <value>Capturer</value>
  </data>
  <data name="tpUpload.Text" xml:space="preserve">
    <value>Mise en ligne</value>
  </data>
  <data name="tpActions.Text" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="tpWatchFolders.Text" xml:space="preserve">
    <value>Surveiller les dossiers</value>
  </data>
  <data name="tpTools.Text" xml:space="preserve">
    <value>Outils</value>
  </data>
  <data name="tpAdvanced.Text" xml:space="preserve">
    <value>Avancé</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>ShareX - Paramètres des tâches</value>
  </data>
  <data name="chkUseDefaultAdvancedSettings.Text" xml:space="preserve">
    <value>Utiliser les paramètres avancés dans la fenêtre principale des paramètres des tâches</value>
  </data>
  <data name="chkUseDefaultToolsSettings.Text" xml:space="preserve">
    <value>Utiliser les paramètres d'outils dans la fenêtre principale des paramètres des tâches</value>
  </data>
  <data name="btnWatchFolderAdd.Text" xml:space="preserve">
    <value>Ajouter...</value>
  </data>
  <data name="btnWatchFolderRemove.Text" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="chWatchFolderIncludeSubdirectories.Text" xml:space="preserve">
    <value>Inclure les sous-dossiers</value>
  </data>
  <data name="chWatchFolderFilter.Text" xml:space="preserve">
    <value>Filtre</value>
  </data>
  <data name="chWatchFolderFolderPath.Text" xml:space="preserve">
    <value>Chemin du dossier</value>
  </data>
  <data name="cbWatchFolderEnabled.Text" xml:space="preserve">
    <value>Surveiller le dossier et si un nouveau fichier est créé, le mettre en ligne</value>
  </data>
  <data name="chkUseDefaultActions.Text" xml:space="preserve">
    <value>Utiliser les actions dans la fenêtre principale des paramètres des tâches</value>
  </data>
  <data name="btnActionsRemove.Text" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="btnActionsEdit.Text" xml:space="preserve">
    <value>Modifier</value>
  </data>
  <data name="chActionsExtensions.Text" xml:space="preserve">
    <value>Extensions</value>
  </data>
  <data name="chActionsArgs.Text" xml:space="preserve">
    <value>Paramètres</value>
  </data>
  <data name="chActionsPath.Text" xml:space="preserve">
    <value>Chemin</value>
  </data>
  <data name="chActionsName.Text" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="btnActionsAdd.Text" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="btnActionsDuplicate.Text" xml:space="preserve">
    <value>Dupliquer</value>
  </data>
  <data name="cbClipboardUploadShortenURL.Text" xml:space="preserve">
    <value>Si le presse-papier contient une URL, utiliser le raccourcisseur d'URL</value>
  </data>
  <data name="cbClipboardUploadAutoIndexFolder.Text" xml:space="preserve">
    <value>Si le presse-papier contient un chemin de dossier, indexer ce dossier et mettre en ligne l'index</value>
  </data>
  <data name="chkClipboardUploadURLContents.Text" xml:space="preserve">
    <value>Si le presse-papier contient l'URL d'un fichier, le télécharger et le mettre en ligne</value>
  </data>
  <data name="cbClipboardUploadShareURL.Text" xml:space="preserve">
    <value>Si le presse-papier contient une URL, la partager en utilisant le service de partage de URL</value>
  </data>
  <data name="tpUploadClipboard.Text" xml:space="preserve">
    <value>Mise en ligne du presse-papier</value>
  </data>
  <data name="lblNameFormatPattern.Text" xml:space="preserve">
    <value>Modèle de nom pour la mise en ligne de la capture ou du presse-papier:</value>
  </data>
  <data name="cbFileUploadUseNamePattern.Text" xml:space="preserve">
    <value>Utiliser un modèle de nom pour la mise en ligne de fichiers plutôt que le nom du fichier réel</value>
  </data>
  <data name="btnResetAutoIncrementNumber.Text" xml:space="preserve">
    <value>Remettre à zéro le compteur incrémental automatique</value>
  </data>
  <data name="lblNameFormatPatternPreviewActiveWindow.Text" xml:space="preserve">
    <value>Prévisualisation :</value>
  </data>
  <data name="lblNameFormatPatternActiveWindow.Text" xml:space="preserve">
    <value>Modèle de nom pour la capture de la fenêtre active :</value>
  </data>
  <data name="lblNameFormatPatternPreview.Text" xml:space="preserve">
    <value>Prévisualisation :</value>
  </data>
  <data name="cbNameFormatCustomTimeZone.Text" xml:space="preserve">
    <value>Utiliser un fuseau horaire personnalisé :</value>
  </data>
  <data name="cbRegionCaptureUseWindowPattern.Text" xml:space="preserve">
    <value>Utiliser le modèle du nom de la fenêtre pour la capture de région (ShareX essayera de détecter la fenêtre derrière la sélection)</value>
  </data>
  <data name="tpFileNaming.Text" xml:space="preserve">
    <value>Nommage des fichiers</value>
  </data>
  <data name="chkUseDefaultUploadSettings.Text" xml:space="preserve">
    <value>Utiliser les paramètres de transfert dans la fenêtre principale des paramètres des tâches</value>
  </data>
  <data name="lblGIFFPS.Text" xml:space="preserve">
    <value>FPS (IPS) des GIFs :</value>
  </data>
  <data name="cbScreenRecorderFixedDuration.Text" xml:space="preserve">
    <value>Durée fixée :</value>
  </data>
  <data name="btnEncoderConfig.Text" xml:space="preserve">
    <value>Profils...</value>
  </data>
  <data name="chkRunScreencastCLI.Text" xml:space="preserve">
    <value>Exécuter CLI après :</value>
  </data>
  <data name="lblScreenRecordFPS.Text" xml:space="preserve">
    <value>IPS (FPS) de l'enregistrement d'écran :</value>
  </data>
  <data name="lblScreenRecorderFixedDuration.Text" xml:space="preserve">
    <value>secondes</value>
  </data>
  <data name="chkScreenRecordAutoStart.Text" xml:space="preserve">
    <value>Démarrer l'enregistrement après :</value>
  </data>
  <data name="lblScreenRecorderStartDelay.Text" xml:space="preserve">
    <value>secondes</value>
  </data>
  <data name="btnScreenRecorderFFmpegOptions.Text" xml:space="preserve">
    <value>Options de l'enregistrement de l'écran...</value>
  </data>
  <data name="lblGIFEncoding.Text" xml:space="preserve">
    <value>Encodeur GIF :</value>
  </data>
  <data name="cbScreenRecorderShowCursor.Text" xml:space="preserve">
    <value>Montrer le curseur durant l'enregistrement</value>
  </data>
  <data name="lblThumbnailWidth.Text" xml:space="preserve">
    <value>Largeur :</value>
  </data>
  <data name="lblThumbnailHeight.Text" xml:space="preserve">
    <value>Hauteur :</value>
  </data>
  <data name="lblThumbnailName.Text" xml:space="preserve">
    <value>Nom de la miniature</value>
  </data>
  <data name="lblThumbnailNamePreview.Text" xml:space="preserve">
    <value>Prévisualisation</value>
  </data>
  <data name="cbThumbnailIfSmaller.Text" xml:space="preserve">
    <value>Créer une miniature seulement si la taille de l'image est plus grande que la taille de la miniature</value>
  </data>
  <data name="tpThumbnail.Text" xml:space="preserve">
    <value>Miniature</value>
  </data>
  <data name="btnImageEffects.Text" xml:space="preserve">
    <value>Configuration des effets d'image...</value>
  </data>
  <data name="cbImageEffectOnlyRegionCapture.Text" xml:space="preserve">
    <value>N'appliquer les effets que sur la région capturée</value>
  </data>
  <data name="chkShowImageEffectsWindowAfterCapture.Text" xml:space="preserve">
    <value>Afficher la fenêtre des effets d'image après la capture</value>
  </data>
  <data name="lblImageEffectsNote.Text" xml:space="preserve">
    <value>Vous pouvez activer/désactiver les effets d'image grâce au menu « Après les tâches de capture » -&gt; « Ajouter des effets d'image ».</value>
  </data>
  <data name="tpEffects.Text" xml:space="preserve">
    <value>Effets</value>
  </data>
  <data name="chkUseDefaultImageSettings.Text" xml:space="preserve">
    <value>Utiliser les paramètres d'images dans la fenêtre principale des paramètres des tâches</value>
  </data>
  <data name="lblImageJPEGQuality.Text" xml:space="preserve">
    <value>Qualité JPEG :</value>
  </data>
  <data name="lblImageGIFQuality.Text" xml:space="preserve">
    <value>Qualité GIF :</value>
  </data>
  <data name="lblImageFileExist.Text" xml:space="preserve">
    <value>Si le fichier existe :</value>
  </data>
  <data name="lblImageFormat.Text" xml:space="preserve">
    <value>Format d'image :</value>
  </data>
  <data name="chkUseDefaultGeneralSettings.Text" xml:space="preserve">
    <value>Utiliser les paramètres généraux dans la fenêtre principale des paramètres des tâches</value>
  </data>
  <data name="cbPlaySoundAfterCapture.Text" xml:space="preserve">
    <value>Jouer un son après une capture</value>
  </data>
  <data name="cbPlaySoundAfterUpload.Text" xml:space="preserve">
    <value>Jouer un son quand la tâche est complétée</value>
  </data>
  <data name="lblAfterTaskNotification.Text" xml:space="preserve">
    <value>Après que la tâche soit complétée :</value>
  </data>
  <data name="btnTask.Text" xml:space="preserve">
    <value>Tâche...</value>
  </data>
  <data name="tsmiURLSharingServices.Text" xml:space="preserve">
    <value>Services de partage d'URL</value>
  </data>
  <data name="tsmiURLShorteners.Text" xml:space="preserve">
    <value>Raccourcisseurs d'URL</value>
  </data>
  <data name="tsmiFileUploaders.Text" xml:space="preserve">
    <value>Services de mise en ligne de fichiers</value>
  </data>
  <data name="tsmiTextUploaders.Text" xml:space="preserve">
    <value>Services de mise en ligne de textes</value>
  </data>
  <data name="tsmiImageUploaders.Text" xml:space="preserve">
    <value>Services de mise en ligne d'images</value>
  </data>
  <data name="btnDestinations.Text" xml:space="preserve">
    <value>Destinations...</value>
  </data>
  <data name="btnAfterUpload.Text" xml:space="preserve">
    <value>Après la mise en ligne...</value>
  </data>
  <data name="btnAfterCapture.Text" xml:space="preserve">
    <value>Après la capture...</value>
  </data>
  <data name="chkOverrideFTP.Text" xml:space="preserve">
    <value>Remplacer le compte FTP par défaut :</value>
  </data>
  <data name="chkOverrideCustomUploader.Text" xml:space="preserve">
    <value>Remplacer le service de mise en ligne personnalisé par défaut :</value>
  </data>
  <data name="cbUseDefaultAfterCaptureSettings.Text" xml:space="preserve">
    <value>Utiliser par défaut les paramètres "Après la capture"</value>
  </data>
  <data name="cbUseDefaultAfterUploadSettings.Text" xml:space="preserve">
    <value>Utiliser par défaut les paramètres "Après la mise en ligne"</value>
  </data>
  <data name="cbUseDefaultDestinationSettings.Text" xml:space="preserve">
    <value>Utiliser par défaut les paramètres "Destination"</value>
  </data>
  <data name="btnCaptureCustomRegionSelectRectangle.Text" xml:space="preserve">
    <value>Séléctionner une région...</value>
  </data>
  <data name="lblCaptureCustomRegion.Text" xml:space="preserve">
    <value>Région personnalisée:</value>
  </data>
</root>