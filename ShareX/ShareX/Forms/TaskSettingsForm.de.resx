<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cbUseDefaultAfterCaptureSettings.Text" xml:space="preserve">
    <value>Benutze Standard "Nach der Aufnahme" Einstellungen</value>
  </data>
  <data name="cbUseDefaultAfterUploadSettings.Text" xml:space="preserve">
    <value>Benutze Standard "Nach dem Hochladen" Einstellungen</value>
  </data>
  <data name="cbUseDefaultDestinationSettings.Text" xml:space="preserve">
    <value>Benutze Standard "Ziele" Einstellungen</value>
  </data>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>Beschreibung:</value>
  </data>
  <data name="tpTask.Text" xml:space="preserve">
    <value>Aufgabe</value>
  </data>
  <data name="tpGeneral.Text" xml:space="preserve">
    <value>Allgemein</value>
  </data>
  <data name="tpImage.Text" xml:space="preserve">
    <value>Bild</value>
  </data>
  <data name="lblCaptureCustomRegionWidth.Text" xml:space="preserve">
    <value>Breite</value>
  </data>
  <data name="lblCaptureCustomRegionHeight.Text" xml:space="preserve">
    <value>Höhe</value>
  </data>
  <data name="cbShowCursor.Text" xml:space="preserve">
    <value>Zeige Maus in Screenshots</value>
  </data>
  <data name="lblCaptureShadowOffset.Text" xml:space="preserve">
    <value>Schattenverstezung</value>
  </data>
  <data name="cbCaptureTransparent.Text" xml:space="preserve">
    <value>Nimm Fenster mit Transparenz auf</value>
  </data>
  <data name="cbCaptureAutoHideTaskbar.Text" xml:space="preserve">
    <value>Wenn eine Fensteraufnahme gemacht wird und sich das Fenster mit der Taskleiste kreuzt, dann verstecke die Taskleiste</value>
  </data>
  <data name="cbCaptureShadow.Text" xml:space="preserve">
    <value>Nimm Fenster mit Schatten auf (benötigt transparenz)</value>
  </data>
  <data name="lblScreenshotDelayInfo.Text" xml:space="preserve">
    <value>Sekunden</value>
  </data>
  <data name="cbCaptureClientArea.Text" xml:space="preserve">
    <value>Nimm Geräteumgebung auf während Fenster- oder aktiver Fensteraufnahme</value>
  </data>
  <data name="cbScreenshotDelay.Text" xml:space="preserve">
    <value>Screenshot Verzögerung:</value>
  </data>
  <data name="chkUseDefaultCaptureSettings.Text" xml:space="preserve">
    <value>Benutze Aufnahmeeinstellungen in den Hauptfenster Aufgabeneinstellungen</value>
  </data>
  <data name="tpRegionCapture.Text" xml:space="preserve">
    <value>Regionsaufnahme</value>
  </data>
  <data name="tpScreenRecorder.Text" xml:space="preserve">
    <value>Bildschirmaufnehmer</value>
  </data>
  <data name="tpCapture.Text" xml:space="preserve">
    <value>Aufnehmen</value>
  </data>
  <data name="tpUpload.Text" xml:space="preserve">
    <value>Hochladen</value>
  </data>
  <data name="tpActions.Text" xml:space="preserve">
    <value>Aktionen</value>
  </data>
  <data name="tpWatchFolders.Text" xml:space="preserve">
    <value>Beobachte Ordner</value>
  </data>
  <data name="tpTools.Text" xml:space="preserve">
    <value>Werkzeuge</value>
  </data>
  <data name="tpAdvanced.Text" xml:space="preserve">
    <value>Erweitert</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>ShareX - Aufgabeneinstellungen</value>
  </data>
  <data name="chkUseDefaultAdvancedSettings.Text" xml:space="preserve">
    <value>Benutze erweiterte Einstellungen in den Hauptfenster Aufgabeneinstellungen </value>
  </data>
  <data name="chkUseDefaultToolsSettings.Text" xml:space="preserve">
    <value>Benutze Werkzeugeinstellungen in den Hauptfenster Aufgabeneinstellungen</value>
  </data>
  <data name="btnWatchFolderAdd.Text" xml:space="preserve">
    <value>Hinzufügen...</value>
  </data>
  <data name="btnWatchFolderRemove.Text" xml:space="preserve">
    <value>Entfernen</value>
  </data>
  <data name="chWatchFolderIncludeSubdirectories.Text" xml:space="preserve">
    <value>Beziehe Unterdirektoren mit ein</value>
  </data>
  <data name="chWatchFolderFilter.Text" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="chWatchFolderFolderPath.Text" xml:space="preserve">
    <value>Ordnerpfad</value>
  </data>
  <data name="cbWatchFolderEnabled.Text" xml:space="preserve">
    <value>Beobachte Ordner und wenn eine neue Datei erstellt wurde lade diese hoch</value>
  </data>
  <data name="chkUseDefaultActions.Text" xml:space="preserve">
    <value>Benutze Aktionen im Hauptfenster Aufgabeneinstellungen</value>
  </data>
  <data name="btnActionsRemove.Text" xml:space="preserve">
    <value>Entfernen</value>
  </data>
  <data name="btnActionsEdit.Text" xml:space="preserve">
    <value>Bearbeiten</value>
  </data>
  <data name="chActionsExtensions.Text" xml:space="preserve">
    <value>Erweiterungen</value>
  </data>
  <data name="chActionsArgs.Text" xml:space="preserve">
    <value>Parameter</value>
  </data>
  <data name="chActionsPath.Text" xml:space="preserve">
    <value>Pfad</value>
  </data>
  <data name="chActionsName.Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="btnActionsAdd.Text" xml:space="preserve">
    <value>Hinzufügen</value>
  </data>
  <data name="btnActionsDuplicate.Text" xml:space="preserve">
    <value>Duplizieren</value>
  </data>
  <data name="cbClipboardUploadShortenURL.Text" xml:space="preserve">
    <value>Wenn die Zwischenablage eine URL enthält, dann benutze den URL Kürzer</value>
  </data>
  <data name="cbClipboardUploadAutoIndexFolder.Text" xml:space="preserve">
    <value>Wenn die Zwischenablage einen Ordnerpfad enthält, teile diesen Ordner ein und dann lade die Teile hoch</value>
  </data>
  <data name="chkClipboardUploadURLContents.Text" xml:space="preserve">
    <value>Wenn die Zwischenablage eine Datei URL beinhaltet, dann lade es runter und lade es hoch</value>
  </data>
  <data name="cbClipboardUploadShareURL.Text" xml:space="preserve">
    <value>Wenn die Zwischenablage eine URL enthält, dann Teile diese URL mithilfe eines Teilungsdienstes</value>
  </data>
  <data name="tpUploadClipboard.Text" xml:space="preserve">
    <value>Hochladen der Zwischenablage</value>
  </data>
  <data name="lblNameFormatPattern.Text" xml:space="preserve">
    <value>Namensmuster für Aufnahme oder Zwischenablagen Uploads</value>
  </data>
  <data name="cbFileUploadUseNamePattern.Text" xml:space="preserve">
    <value>Benutze Namensmuster für das Hochladen von Dateien anstatt vom eigentlichen Dateinamen</value>
  </data>
  <data name="btnResetAutoIncrementNumber.Text" xml:space="preserve">
    <value>Setzte Autozuwachsnummer zurück</value>
  </data>
  <data name="lblNameFormatPatternPreviewActiveWindow.Text" xml:space="preserve">
    <value>Vorschau:</value>
  </data>
  <data name="lblNameFormatPatternActiveWindow.Text" xml:space="preserve">
    <value>Namensmuster für aktive Fenster Aufnahme</value>
  </data>
  <data name="lblNameFormatPatternPreview.Text" xml:space="preserve">
    <value>Vorschau:</value>
  </data>
  <data name="cbNameFormatCustomTimeZone.Text" xml:space="preserve">
    <value>Benutze angepasste Zeitzone:</value>
  </data>
  <data name="cbRegionCaptureUseWindowPattern.Text" xml:space="preserve">
    <value>Benutze Fenstertitel für Regionsaufnahmen (ShareX versucht das Fenster hinter der Auswahl zu ermitteln)</value>
  </data>
  <data name="tpFileNaming.Text" xml:space="preserve">
    <value>Dateibenennung</value>
  </data>
  <data name="chkUseDefaultUploadSettings.Text" xml:space="preserve">
    <value>Benutze Hochladeeinstellungen in den Hauptfenster Aufgabeneinstellungen</value>
  </data>
  <data name="lblGIFFPS.Text" xml:space="preserve">
    <value>GIF FPS:</value>
  </data>
  <data name="cbScreenRecorderFixedDuration.Text" xml:space="preserve">
    <value>Gesetzte Dauer:</value>
  </data>
  <data name="btnEncoderConfig.Text" xml:space="preserve">
    <value>Profile...</value>
  </data>
  <data name="chkRunScreencastCLI.Text" xml:space="preserve">
    <value>Starte CLI danach</value>
  </data>
  <data name="lblScreenRecordFPS.Text" xml:space="preserve">
    <value>Bildschirmaufnahme FPS:</value>
  </data>
  <data name="lblScreenRecorderFixedDuration.Text" xml:space="preserve">
    <value>Sekunden</value>
  </data>
  <data name="chkScreenRecordAutoStart.Text" xml:space="preserve">
    <value>Starte Aufnahme nach:</value>
  </data>
  <data name="lblScreenRecorderStartDelay.Text" xml:space="preserve">
    <value>Sekunden</value>
  </data>
  <data name="btnScreenRecorderFFmpegOptions.Text" xml:space="preserve">
    <value>FFmpeg Optionen...</value>
  </data>
  <data name="lblGIFEncoding.Text" xml:space="preserve">
    <value>GIF encoder:</value>
  </data>
  <data name="cbScreenRecorderShowCursor.Text" xml:space="preserve">
    <value>Zeige Mauszeiger in der Aufnahme</value>
  </data>
  <data name="lblThumbnailWidth.Text" xml:space="preserve">
    <value>Weite:</value>
  </data>
  <data name="lblThumbnailHeight.Text" xml:space="preserve">
    <value>Höhe:</value>
  </data>
  <data name="lblThumbnailName.Text" xml:space="preserve">
    <value>Thumbnail Name:</value>
  </data>
  <data name="lblThumbnailNamePreview.Text" xml:space="preserve">
    <value>Vorschau</value>
  </data>
  <data name="cbThumbnailIfSmaller.Text" xml:space="preserve">
    <value>Erstelle Thumbnail nur wenn das Bild größer als das Thumbnail ist</value>
  </data>
  <data name="tpThumbnail.Text" xml:space="preserve">
    <value>Thumbnail</value>
  </data>
  <data name="btnImageEffects.Text" xml:space="preserve">
    <value>Bildeffekte Konfiguration...</value>
  </data>
  <data name="cbImageEffectOnlyRegionCapture.Text" xml:space="preserve">
    <value>Benutze Effekte nur für Regionsaufnahme</value>
  </data>
  <data name="chkShowImageEffectsWindowAfterCapture.Text" xml:space="preserve">
    <value>Zeige Bildeffekte Fenster nachdem die Aufnahme geamacht wurde</value>
  </data>
  <data name="lblImageEffectsNote.Text" xml:space="preserve">
    <value>Du kannst die Bildeffekte aktivieren/deaktivieren über "Nach der Aufnahme Einstellungen -&gt; Füge Bildereffekte hinzu"</value>
  </data>
  <data name="tpEffects.Text" xml:space="preserve">
    <value>Effekte</value>
  </data>
  <data name="chkUseDefaultImageSettings.Text" xml:space="preserve">
    <value>Benutze Bildeinstellungen in den Hauptfenster Aufgabeneinstellungen</value>
  </data>
  <data name="lblImageJPEGQuality.Text" xml:space="preserve">
    <value>JPEG Qualität:</value>
  </data>
  <data name="lblImageGIFQuality.Text" xml:space="preserve">
    <value>GIF Qualität:</value>
  </data>
  <data name="lblImageJPEGQualityHint.Text" xml:space="preserve">
    <value>0 - 100</value>
  </data>
  <data name="lblImageFileExist.Text" xml:space="preserve">
    <value>Wenn Datei existiert:</value>
  </data>
  <data name="lblImageFormat.Text" xml:space="preserve">
    <value>Bildformat:</value>
  </data>
  <data name="chkUseDefaultGeneralSettings.Text" xml:space="preserve">
    <value>Benutze allgemeine Einstellungen in den Hauptfenster Aufgabeneinstellungen</value>
  </data>
  <data name="cbPlaySoundAfterCapture.Text" xml:space="preserve">
    <value>Spiele Ton nachdem eine Aufnahme gemacht wurde</value>
  </data>
  <data name="cbPlaySoundAfterUpload.Text" xml:space="preserve">
    <value>Spiele Ton nachdem eine Aufgabe beendet wurde</value>
  </data>
  <data name="lblAfterTaskNotification.Text" xml:space="preserve">
    <value>Nachdem die Aufgabe fertig ist:</value>
  </data>
  <data name="btnTask.Text" xml:space="preserve">
    <value>Aufgabe...</value>
  </data>
  <data name="tsmiURLSharingServices.Text" xml:space="preserve">
    <value>URL Teilerdienst</value>
  </data>
  <data name="tsmiURLShorteners.Text" xml:space="preserve">
    <value>URL Kürzer</value>
  </data>
  <data name="tsmiFileUploaders.Text" xml:space="preserve">
    <value>Datei Hochlader</value>
  </data>
  <data name="tsmiTextUploaders.Text" xml:space="preserve">
    <value>Text Hochlader</value>
  </data>
  <data name="tsmiImageUploaders.Text" xml:space="preserve">
    <value>Bildhochlader</value>
  </data>
  <data name="btnDestinations.Text" xml:space="preserve">
    <value>Ziele...</value>
  </data>
  <data name="btnAfterUpload.Text" xml:space="preserve">
    <value>Nach dem Hochladen...</value>
  </data>
  <data name="btnAfterCapture.Text" xml:space="preserve">
    <value>Nach der Aufnahme...</value>
  </data>
  <data name="chkOverrideFTP.Text" xml:space="preserve">
    <value>Überschreibe den vorgegeben FTP account:</value>
  </data>
  <data name="chkOverrideCustomUploader.Text" xml:space="preserve">
    <value>Überschreibe den vorgegebenen eigenen Hochlader:</value>
  </data>
</root>