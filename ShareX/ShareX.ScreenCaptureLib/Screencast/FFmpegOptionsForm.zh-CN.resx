<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="$this.Text" xml:space="preserve">
    <value>ShareX - FFmpeg记录选项</value>
  </data>
  <data name="btnCopyPreview.Text" xml:space="preserve">
    <value>复制</value>
  </data>
  <data name="btnDownload.Text" xml:space="preserve">
    <value>下载</value>
  </data>
  <data name="btnHelp.Text" xml:space="preserve">
    <value>帮助...</value>
  </data>
  <data name="btnRefreshSources.Text" xml:space="preserve">
    <value>刷新</value>
  </data>
  <data name="btnTest.Text" xml:space="preserve">
    <value>使用CMD测试</value>
  </data>
  <data name="cbCustomCommands.Text" xml:space="preserve">
    <value>使用自定义命令</value>
  </data>
  <data name="gbCodecs.Text" xml:space="preserve">
    <value>编解码器</value>
  </data>
  <data name="gbCommandLineArgs.Text" xml:space="preserve">
    <value>额外的命令行参数</value>
  </data>
  <data name="gbCommandLinePreview.Text" xml:space="preserve">
    <value>命令行预览</value>
  </data>
  <data name="gbSource.Text" xml:space="preserve">
    <value>来源</value>
  </data>
  <data name="lblAACQuality.Text" xml:space="preserve">
    <value>比特率:</value>
  </data>
  <data name="lblAudioCodec.Text" xml:space="preserve">
    <value>音频编解码器:</value>
  </data>
  <data name="lblAudioSource.Text" xml:space="preserve">
    <value>音频源:</value>
  </data>
  <data name="lblCodec.Text" xml:space="preserve">
    <value>视频编解码器:</value>
  </data>
  <data name="lblMP3Quality.Text" xml:space="preserve">
    <value>质量:</value>
  </data>
  <data name="lblVideoSource.Text" xml:space="preserve">
    <value>视频源:</value>
  </data>
  <data name="lblVorbisQuality.Text" xml:space="preserve">
    <value>质量:</value>
  </data>
  <data name="nudx264CRF.ToolTip" xml:space="preserve">
    <value>"恒速率因子（CRF）:量化比例的范围为0-51:其中,0是无损的,23是默认值,51是最糟糕的.
较低的值是一个更高的质量和主观理智的范围是18-28.
考虑18为视觉上无损或几乎如此:它应该看起来相同或几乎相同的输入,但它在技术上并不无损.
范围是指数,因此增加了CRF值+6大约一半的比特率,而-6大致的比特率的两倍.
一般用法是选择最高CRF值仍提供可接受的质量.
如果输出看起来不错,然后尝试更高的价值,如果它看起来不错,然后选择一个较低的值".
默认值是128K.
范围是0-9,其中较低的值是一个更高的质量. 0-3,通常会产生透明效果,4（默认）应接近感知透明度和6产生一个"可以接受的"质量.</value>
  </data>
  <data name="tbAACBitrate.ToolTip" xml:space="preserve">
    <value>默认值是128K.</value>
  </data>
  <data name="tbMP3_qscale.ToolTip" xml:space="preserve">
    <value>范围是0-9,其中较低的值是一个更高的质量. 0-3,通常会产生透明效果,4（默认）应接近感知透明度和6产生一个"可以接受的"质量.</value>
  </data>
  <data name="tbVorbis_qscale.ToolTip" xml:space="preserve">
    <value>范围是0-10,其中10为最高质量. 3-6是一个很好的范围内尝试.默认值是3.</value>
  </data>
  <data name="lblx264Preset.Text" xml:space="preserve">
    <value>预置:</value>
  </data>
  <data name="lblXvidQscale.Text" xml:space="preserve">
    <value>可变比特率:</value>
  </data>
  <data name="gbFFmpegExe.Text" xml:space="preserve">
    <value>FFmpeg路径</value>
  </data>
  <data name="cbOverrideFFmpegPath.Text" xml:space="preserve">
    <value>使用自定义路径</value>
  </data>
  <data name="lblVP8Bitrate.Text" xml:space="preserve">
    <value>可变比特率:</value>
  </data>
  <data name="lblGIFDither.Text" xml:space="preserve">
    <value>抖动方式:</value>
  </data>
  <data name="lblGIFStatsMode.Text" xml:space="preserve">
    <value>调色板模式:</value>
  </data>
  <data name="lblHelperDevices.Text" xml:space="preserve">
    <value>安装“屏幕捕捉器”和“虚拟音频捕捉器”视频/音频源。</value>
  </data>
  <data name="btnInstallHelperDevices.Text" xml:space="preserve">
    <value>安装捕捉器</value>
  </data>
</root>