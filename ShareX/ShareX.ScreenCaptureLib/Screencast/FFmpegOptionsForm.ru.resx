<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="$this.Text" xml:space="preserve">
    <value>ShareX - Настройки записи экрана</value>
  </data>
  <data name="btnCopyPreview.Text" xml:space="preserve">
    <value>В буфер</value>
  </data>
  <data name="btnDownload.Text" xml:space="preserve">
    <value>Скачать</value>
  </data>
  <data name="btnHelp.Text" xml:space="preserve">
    <value>Помощь…</value>
  </data>
  <data name="btnInstallHelperDevices.Text" xml:space="preserve">
    <value>Установить устройства записи</value>
  </data>
  <data name="btnRefreshSources.Text" xml:space="preserve">
    <value>Обновить</value>
  </data>
  <data name="btnTest.Text" xml:space="preserve">
    <value>Тест в консоли</value>
  </data>
  <data name="cbCustomCommands.Text" xml:space="preserve">
    <value>Пользовательские команды</value>
  </data>
  <data name="cbGIFDither.ToolTip" xml:space="preserve">
    <value>По умолчанию sierra2_4a.</value>
  </data>
  <data name="cbGIFStatsMode.ToolTip" xml:space="preserve">
    <value>По умолчанию full.</value>
  </data>
  <data name="tbAACBitrate.ToolTip" xml:space="preserve">
    <value>По умолчанию 128k.</value>
  </data>
  <data name="tbVorbis_qscale.ToolTip" xml:space="preserve">
    <value>Диапазон от 0 до 10, где 10 это наилучшее качество. Попробуйте от 3 до 6. По умолчанию 3.</value>
  </data>
  <data name="cbOverrideFFmpegPath.Text" xml:space="preserve">
    <value>Пользовательский путь</value>
  </data>
  <data name="lblx264Preset.Text" xml:space="preserve">
    <value>Предустановка:</value>
  </data>
  <data name="cbx264Preset.ToolTip" xml:space="preserve">
    <value>Предустановка — это набор настроек, которые задают определенное соотношение скорости кодировки и сжатия. Более медленная предустановка задает лучшее сжатие (сжатие — это качество на размер файла).
Значит при желании получить определенный размер файла при постоянном битрейте, лучшие результаты получаются на более медленных предустановках.
Соответственно для кодирования с постоянным качеством вы можете попросту уменьшить битрейт, выбрав предустановку помедленнее.</value>
  </data>
  <data name="gbCodecs.Text" xml:space="preserve">
    <value>Кодеки</value>
  </data>
  <data name="gbCommandLineArgs.Text" xml:space="preserve">
    <value>Дополнительные аргументы</value>
  </data>
  <data name="gbCommandLinePreview.Text" xml:space="preserve">
    <value>Предпросмотр</value>
  </data>
  <data name="gbFFmpegExe.Text" xml:space="preserve">
    <value>Путь к FFmpeg</value>
  </data>
  <data name="lblAACQuality.Text" xml:space="preserve">
    <value>Битрейт:</value>
  </data>
  <data name="lblAudioCodec.Text" xml:space="preserve">
    <value>Аудиокодек:</value>
  </data>
  <data name="lblAudioSource.Text" xml:space="preserve">
    <value>Звук:</value>
  </data>
  <data name="lblCodec.Text" xml:space="preserve">
    <value>Видеокодек:</value>
  </data>
  <data name="lblGIFDither.Text" xml:space="preserve">
    <value>Режим дизеринга:</value>
  </data>
  <data name="lblGIFStatsMode.Text" xml:space="preserve">
    <value>Режим палитры:</value>
  </data>
  <data name="gbSource.Text" xml:space="preserve">
    <value>Источники</value>
  </data>
  <data name="lblHelperDevices.Text" xml:space="preserve">
    <value>Установит источники видео/аудио "screen-capture-recorder" и "virtual-audio-capturer"</value>
  </data>
  <data name="lblMP3Quality.Text" xml:space="preserve">
    <value>Качество:</value>
  </data>
  <data name="lblVideoSource.Text" xml:space="preserve">
    <value>Видео:</value>
  </data>
  <data name="lblVorbisQuality.Text" xml:space="preserve">
    <value>Качество:</value>
  </data>
  <data name="lblVP8Bitrate.Text" xml:space="preserve">
    <value>Переменный битрейт:</value>
  </data>
  <data name="lblXvidQscale.Text" xml:space="preserve">
    <value>Переменный битрейт:</value>
  </data>
  <data name="nudXvidQscale.ToolTip" xml:space="preserve">
    <value>1 = лучшее качество/наибольший размер файла, а 31 = наихудшее качество/наименьший размер файла.</value>
  </data>
  <data name="tbMP3_qscale.ToolTip" xml:space="preserve">
    <value>Диапазон от 0 до 9, где ниже значение — лучше качество. 0-3 обычно производит прозрачные результаты, 4 (изначально) должно быть близко к перцепционной прозрачности, а 6 производит "приемлемое" качество.</value>
  </data>
  <data name="nudx264CRF.ToolTip" xml:space="preserve">
    <value>Однопроходное сжатие (CRF): диапазон масштаба квантизации от 0 до 51, где 0 = без потерь, 23 по умолчанию, а 51 наихудшее из возможных.
Низкие значения улучшают качество, разумный диапазон субъективно 18-28.
Учтите, что 18 будет визуально казаться несжатым или близким к тому: будет выглядеть так же или почти так же, как и входной поток, то технически сжатие есть.
Диапазон экспоненциален, значит увеличение CRF на 6 уменьшит битрейт грубо говоря в 2 раза, а увеличение на 6 удвоит его.
В общем выберите наибольшее значение, которое все еще производит приемлемое качество.
Если вывод выглядит хорошо, попробуйте значение повыше, если плохо, выбирайте более низкое значение.</value>
  </data>
  <data name="pbAudioCodecWarning.ToolTip" xml:space="preserve">
    <value>Этот аудио кодек не поддерживается выбранным контейнером видео.</value>
  </data>
  <data name="pbx264PresetWarning.ToolTip" xml:space="preserve">
    <value>Для кодирования в реальном времени, например, для записи экрана, рекомендуется выбрать самую быструю предустановку.
Иначе оно будет отставать от захвата и терять кадры.</value>
  </data>
</root>