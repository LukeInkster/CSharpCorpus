<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblTrimLeft.Text" xml:space="preserve">
    <value>Sol:</value>
  </data>
  <data name="lblTrimRight.Text" xml:space="preserve">
    <value>Sağ:</value>
  </data>
  <data name="lblTrimBottom.Text" xml:space="preserve">
    <value>Alt:</value>
  </data>
  <data name="lblTrimTop.Text" xml:space="preserve">
    <value>Üst:</value>
  </data>
  <data name="btnStartTask.Text" xml:space="preserve">
    <value>Yükle/kaydet yakalama sonrası ayarlarına göre</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>ShareX - Kaydırarak yakalama</value>
  </data>
  <data name="btnCapture.Text" xml:space="preserve">
    <value>Yakalamayı başlat</value>
  </data>
  <data name="gbImages.Text" xml:space="preserve">
    <value>Resimler</value>
  </data>
  <data name="lblCombineVertical.Text" xml:space="preserve">
    <value>Dikey:</value>
  </data>
  <data name="lblCombineLastVertical.Text" xml:space="preserve">
    <value>Son dikey:</value>
  </data>
  <data name="lblImageCount.Text" xml:space="preserve">
    <value>Resim sayısı:</value>
  </data>
  <data name="tpOutput.Text" xml:space="preserve">
    <value>Çıktı</value>
  </data>
  <data name="tpCapture.Text" xml:space="preserve">
    <value>Yakala</value>
  </data>
  <data name="lblStartDelay.Text" xml:space="preserve">
    <value>Başlangıç gecikmesi:</value>
  </data>
  <data name="lblScrollDelay.Text" xml:space="preserve">
    <value>Kaydırma gecikmesi:</value>
  </data>
  <data name="lblScrollMethod.Text" xml:space="preserve">
    <value>Kaydırma yöntemi:</value>
  </data>
  <data name="lblProcessing.Text" xml:space="preserve">
    <value>İşleniyor...</value>
  </data>
  <data name="lblMaximumScrollCount.Text" xml:space="preserve">
    <value>En fazla kaydırma sayısı:</value>
  </data>
  <data name="lblIgnoreLast.Text" xml:space="preserve">
    <value>Sonuncuları sil:</value>
  </data>
  <data name="gbTrimEdges.Text" xml:space="preserve">
    <value>Kenarları kırp</value>
  </data>
  <data name="gbCombineAdjustments.Text" xml:space="preserve">
    <value>Birleştirme ayarları</value>
  </data>
  <data name="btnGuessCombineAdjustments.Text" xml:space="preserve">
    <value>Birleştirme ayarlarını tahmin et ve birleştir</value>
  </data>
  <data name="btnGuessEdges.Text" xml:space="preserve">
    <value>Kenar kırpma değerlerini tahmin et</value>
  </data>
  <data name="btnResetCombine.Text" xml:space="preserve">
    <value>Çıktı ayarlarını sıfırla</value>
  </data>
  <data name="btnSelectHandle.Text" xml:space="preserve">
    <value>Pencere veya kontrol seçin kaydırmak için...</value>
  </data>
  <data name="btnSelectRectangle.Text" xml:space="preserve">
    <value>(Opsiyonel) Özel alan seçin pencere içinde...</value>
  </data>
  <data name="cbAutoDetectScrollEnd.Text" xml:space="preserve">
    <value>Kaydırma sonuna geldiğini otomatik tespit et</value>
  </data>
  <data name="cbRemoveDuplicates.Text" xml:space="preserve">
    <value>Aynı olan resimleri sil</value>
  </data>
  <data name="cbAutoCombine.Text" xml:space="preserve">
    <value>Yakaladıktan sonra birleştirme ayarlarını tespit et ve birleştir</value>
  </data>
  <data name="cbStartCaptureAutomatically.Text" xml:space="preserve">
    <value>Alan seçtikten sonra kaydırarak yakalamayı başlat</value>
  </data>
  <data name="cbStartSelectionAutomatically.Text" xml:space="preserve">
    <value>Bu pencere açılmadan önce alan seçimini başlat</value>
  </data>
  <data name="lblNote.Text" xml:space="preserve">
    <value>Lütfen dikkat, ShareX düzgün bir şekilde kaydırarak yakalama için elinden geleni yapsada her durumda kusursuz kaydırarak yakalama yapmak mümkün değildir. Ana nedenlerinden biri kaydırma esnasında ekranda hareket olmasıdır, mesela web sayfası yakalarken ekranda hareketli bir GIF resmi varsa birleştirme esnasında sorun yaratcaktır. Bir diğer nedende ekranda olan sabit objelerdir, mesela web sayfası kaydırırken ekranda hareket etmiyen bir menu veya tuş olması nereden birleştirilceğini hesaplamada zorluk çıkarıcaktır.</value>
  </data>
  <data name="cbAutoClose.Text" xml:space="preserve">
    <value>İşlemlerden sonra bu pencereyi kapat</value>
  </data>
  <data name="chkAutoUpload.Text" xml:space="preserve">
    <value>Yükle/kaydet yakalama sonrası ayarlarına göre</value>
  </data>
  <data name="gbAfterCapture.Text" xml:space="preserve">
    <value>Yakalamadan sonra</value>
  </data>
  <data name="gbBeforeCapture.Text" xml:space="preserve">
    <value>Yakalamadan önce</value>
  </data>
  <data name="gbWhileCapturing.Text" xml:space="preserve">
    <value>Yakalama esnasında</value>
  </data>
  <data name="lblScrollTopMethodBeforeCapture.Text" xml:space="preserve">
    <value>Yukarı kaydırma yöntemi yakalamadan önce:</value>
  </data>
</root>