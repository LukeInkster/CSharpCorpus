<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
    var NumberOfEntityTypes = 2000;
#>
// Copyright (c) .NET Foundation. All rights reserved.
// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

using System.Collections.Generic;

// ReSharper disable once CheckNamespace
// <auto-generated />
namespace Microsoft.EntityFrameworkCore.Tests
{
    public static class GiantModel
    {
        public class RelatedEntity1
        {
            public int Id { get; set; }
			
            public RelatedEntity<#=NumberOfEntityTypes#> ParentEntity { get; set; }

            public IEnumerable<RelatedEntity2> ChildEntities { get; set; }			
        }

<#
	var currentEntityTypeNumber = 2;
	for(;currentEntityTypeNumber < NumberOfEntityTypes; currentEntityTypeNumber++ )
	{
#>
        public class RelatedEntity<#=currentEntityTypeNumber#>
        {
            public int Id { get; set; }

            public RelatedEntity<#=currentEntityTypeNumber - 1#> ParentEntity { get; set; }

            public IEnumerable<RelatedEntity<#=currentEntityTypeNumber + 1#>> ChildEntities { get; set; }
        }

<#
	}
#>
        public class RelatedEntity<#=currentEntityTypeNumber#>
        {
            public int Id { get; set; }

            public RelatedEntity<#=currentEntityTypeNumber - 1#> ParentEntity { get; set; }

            public IEnumerable<RelatedEntity1> ChildEntities { get; set; }
        }
    }
}